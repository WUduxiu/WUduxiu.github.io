工厂方法模式： Factory Method Pattern

1.工厂方法模式可以解决简单工厂模式中的违背OCP原则的问题
   任何解决的？ 就是一个工厂对应生产一种产品
   这样工厂就不是全能类(上帝类) 另外也符合OCP原则了

2.工厂方法模式中的角色
    1.抽象产品角色  例如抽象武器角色：Weapon
    2.具体产品角色  例如具体武器角色：Gun Tank Dagger
    3.抽象工厂角色   例如抽象的武器工厂：WeaponFactory
    4.具体工厂角色    例如具体的武器工厂：TankFactory GunFactory 每个工厂专门生产一种产品

3.工厂方法模式的优点
    当你扩展一个新产品的时候，符合OCP原则，因为只需要添加俩个类，一个产品具体类，一个工厂具体类。
    都是添加类，没有修改之前的代码，符合OCP原则
    一个调用者想创建一个对象，只要知道其名称就可以了。
    扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以。
    屏蔽产品的具体实现，调用者只关心产品的接口

4.工厂模式的缺点
    每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，
    在一定程度上增加了系统的复杂度，同时也增加了系统具体类的依赖。这并不是什么好事。
