Bean生命周期五步
    第一步：实例化Bean
    第二步：给Bean属性赋值
    第三步：初始化Bean
    第四步：使用Bean
    第五步：销毁Bean

Bean生命周期的七步   比上面的五步多的两步在 初始化Bean的前后
    第一步：实例化Bean
    第二步：给Bean的属性赋值
    第三步：执行“Bean后处理器”的before方法
    第四步：初始化Bean
    第五步：执行“Bean后处理器”的after方法
    第六步：使用Bean
    第七步：销毁Bean

Bean的生命周期的十步
    点位1：在“Bean后处理器”的before之前
        检查Bean是否实现了Aware相关的接口，如果实现了接口，则调用这些接口中的方法
        调用这些接口的目的是为了给你传递一些数据，让你更加方便使用
    点位2：在“Bean后处理器”的before之后
         检查Bean是否实现了InitializingBean接口，如果实现了则调用接口中的方法
    点位3：使用Bean之后或者是说销毁Bean之前
         检查Bean是否实现了DisposableBean接口，如果实现了则调用接口中的方法
    添加的这三个点位，都是在检查你这个Bean是否实现了某些特定的接口，如果实现了这些接口，则Spring容器会调用这个接口中的方法

   Spring容器只会对singleton(单例的)的Bean进行完整的生命周期管理
   如果是prototype作用域的Bean，Spring容器只会将该Bean初始化完毕，
   等客户端一旦和获取到该Bean之后(即使用了Bean之后)，Spring容器就不再管理该Bean的生命周期了
