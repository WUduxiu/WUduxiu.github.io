<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 配置userDao -->
    <bean id="userDao" class="com.bjpowernode.spring6.dao.UserDao"/>
    <!-- 配置vipDao -->
    <bean id="vipDao" class="com.bjpowernode.spring6.dao.VipDao"/>
    <!-- 配置CustomerService_constructor -->
    <bean id="customerService" class="com.bjpowernode.spring6.service.CustomerService_constructor">
        <!-- 第一种构造注入 -->
        <!--
            index属性指定参数下标，第一个参数是0，第二个参数是1 以此类推
            ref属性用来指定注入的bean的id
         -->
        <!-- 指定构造方法的第一个参数，下标为0 -->
        <constructor-arg index="0" ref="userDao"/>
        <!-- 指定构造注入的第二个参数，下标为1 -->
        <constructor-arg index="1" ref="vipDao"/>
    </bean>
    <!-- 构造注入 -->
    <bean id="cusBean" class="com.bjpowernode.spring6.service.CustomerService_constructor">
        <!-- 第二种构造注入 也可以使用name属性来指定参数 -->
        <constructor-arg name="userDao" ref="userDao"/>
        <constructor-arg name="vipDao" ref="vipDao"/>
    </bean>
    <!-- 构造注入 -->
    <bean id="cusBean2" class="com.bjpowernode.spring6.service.CustomerService_constructor">
        <!-- 第三种构造注入：既不指定下标，也不指定参数名，让Spring自己做类型匹配 -->
        <!-- 这种方式实际上是根据类型进行注入的，Spring会自动根据类型来判断把ref给注入那个参数 -->
        <constructor-arg ref="vipDao"/>
        <constructor-arg ref="userDao"/>
    </bean>
</beans>