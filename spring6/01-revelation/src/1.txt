1.OCP  (O是open  C是close)
	什么是OCP？
		OCP是软件七大开发原则当中最基本的一个原则：开闭原则
		对什么开？  对扩展开放
		对什么闭？	对修改关闭
	OCP开闭原则的核心是什么？
		只要你在扩展系统功能的时候，没有修改以前写好的程序，那么就是符合OCP原则的
		反之，如果在扩展系统功能的时候，你修改了之前的代码，那么这个设计是失败的，违背了OCP原则
	当进行系统功能扩展的时候，如果动了以前稳定的程序，修改了之前的代码，之前的所有程序都要进行重新测试，这是十分麻烦的

2.依赖倒置原则(DIP原则)
  	什么是依赖倒置原则？
  		面向接口编程，面向抽象编程，不要面向具体编程
  	依赖倒置原则的目的？
  		降低程序的耦合度，提高扩展力
  	什么叫做符合依赖倒置？
  		上 不依赖 下
  	什么叫做违背依赖倒置原则
  		上 依赖 下 就是违背
  		只要 下 一改动 上就受到牵连

3.当前程序的设计，明显既为违背了OCP（开闭原则），又违背了DIP(依赖倒置原则)
     可以采用“控制反转”这种编程思想来解决问题

4.控制反转
  	什么是控制反转？
  		控制反转(Inversion of Control)
  	反转的是什么？
  		反转的第一件事：不在程序中采用硬编码的方式来new对象（new对象不用管了，new对象的权力交出去了）
  		反转的第二件事：不在程序中采用硬编码的方式来维护对象了 （对象之间关系的维护权也交出去了）
  控制反转：是一种编程思想，或者叫做一种新型的设计模式，由于出现的时间比较新，所以没有被纳入GoF23种设计模式之中。

5.Spring框架
  	Spring框架实现了控制反转IoC这种思想，或者说Spring框架是一个实现了IoC的思想容器
  		Spring框架可以帮你new对象
  		Spring框架可以帮你维护对象和对象之间的关系
  	控制反转的实现其中比较重要的叫做：依赖注入（Dependency Injection,简称DI）
  	其中：控制反转是思想，依赖注入是这种思想的具体实现方式
  	依赖注入DI，又包括常见的两种方式：
  		第一种：set注入（执行set方法给属性赋值）
  		第二种：构造方法注入（执行构造方法给属性赋值）
  	依赖注入中 ，“依赖是什么？” “注入又是什么？”
  		依赖：是指 A对象和B对象之间的关系
  		注入：是一种手段，通过这种手段，可以让A对象和B对象产生关系
  		依赖注入：对象A和对象B之间的关系，靠注入的手段来维护，而注入包括 set注入和构造注入
6.专业术语
    OCP：开闭原则（一种开发原则）
    DIP：依赖倒置原则（一种开发原则）
    IoC：控制反转（一种思想，一种新型的设计模式）
    DI：依赖注入（控制反转思想的具体实现方式 常见的注入方式有两种方式）

